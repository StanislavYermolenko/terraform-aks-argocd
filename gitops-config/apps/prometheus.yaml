apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  project: monitoring-stack
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 51.2.0
    helm:
      values: |
        fullnameOverride: prometheus
        # Global settings to avoid complex configurations
        global:
          imageRegistry: ""
        # Disable CRDs since we install them via Terraform (prometheus-crds.tf)
        # This avoids annotation size issues with the Helm chart CRDs
        crds:
          enabled: false
        # Configure prometheus operator to avoid deployment issues
        prometheusOperator:
          admissionWebhooks:
            enabled: false
          # Clean security context configuration
          securityContext:
            fsGroup: 65534
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          # Avoid complex container args that cause parsing issues
          image:
            tag: v0.66.0
          # Use simple environment variables
          env:
            - name: GOGC
              value: "30"
          # Explicitly disable components that might cause argument issues
          prometheusConfigReloader:
            image:
              tag: v0.66.0
          configReloaderCpu: 100m
          configReloaderMemory: 50Mi
        prometheus:
          prometheusSpec:
            retention: 7d
            resources:
              requests:
                memory: 400Mi
                cpu: 200m
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: managed-csi
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
        grafana:
          enabled: true
          admin:
            existingSecret: ""
            userKey: admin-user
            passwordKey: admin-password
          persistence:
            enabled: true
            storageClassName: managed-csi
            size: 5Gi
          service:
            type: ClusterIP
          ingress:
            enabled: false
        alertmanager:
          enabled: true
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: managed-csi
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 5Gi
        nodeExporter:
          enabled: true
        kubeStateMetrics:
          enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
